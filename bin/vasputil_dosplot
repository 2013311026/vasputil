#!/usr/bin/python
# vim: set fileencoding=latin-1
# Copyright (c) 2008 Janne Blomqvist

#  This file is part of Vasputil.

#  Vasputil is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 3 of the License, or
#  (at your option) any later version.

#  Vasputil is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.

#  You should have received a copy of the GNU General Public License
#  along with vasputil.  If not, see <http://www.gnu.org/licenses/>.

"""Example plotting script demonstrating how to use the vasputil.dos module."""

import vasputil.dos as d
from pylab import *
from optparse import OptionParser

usage = """%prog [options] DOSCAR atom

atom 0 is the total dos, atom 1-N are LDOS."""
parser = OptionParser(usage)
parser.add_option("-f", "--fermi", dest="fermi", help="Fermi energy")
parser.add_option("-o", "--orbital", dest="orb", help="Orbital, s=1, p=2, \
d=3, if spin polarized s+ = 1, s- = 2 etc.")
(options, args) = parser.parse_args()

# By default LDOS constructor tries to read a file called "DOSCAR".
dc = d.LDOS(args[0])
atom = int(args[1])
if options.fermi:
    fermi = float(options.fermi)
    dc.efermi = fermi
if options.orb:
    orb = int(options.orb)
else:
    orb = 1

en = dc.get_energygrid() # This is the x-axis in a typical DOS plot.

label = "Atom " + str(atom) + " orbital " + str(orb)
plot(en, dc.get_dos(atom, orb), label=label)
d.showdp()

# For a more involved plot, create your own plot script or run interactively
# via 'ipython -pylab'
# Below are some example pylab commands for plotting
#subplot(211)
# Get the s and p DOS of atom 1.
#plot(en, dc.get_dos(1, 1), "k-", label="Al s")
#plot(en, dc.get_dos(1, 2), "k-.", label="Al p")
#legend()
#xlim(-15,5)
#xticks(arange(0))
#subplot(212)
# s-DOS of atom 2. 
#plot(en, dc.get_dos(2, 1), "k-", label="Al s")
#xlim(-15,5)
#ylim(0,.29)
#d.showdp()
