
 Lahey/Fujitsu Fortran 95 Compiler Release L6.20b  Wed Dec 14 13:09:48 2005
 Copyright (C) 1994-2003 Lahey Computer Systems.  All rights reserved.
 Copyright (C) 1998-2003 FUJITSU LIMITED. All rights reserved.

 Compilation information
   Current directory : /home/job/src/vasputil_f90
   Source file       : src/geometry.f90
   Compiler options  : --ap -c --chk aesux --chkglobal --nco --dal --ndbl --f95 
                     : -g --nin --info --li --lst --nlong --maxfatals 50 --nml 
                     : --nmldefault --o0 --no --nocl --nopenmp --nparallel 
                     : --nprefetch --pca --nprivate --nquad --quiet --nsav 
                     : --nshared --nsse2 --nstaticlink --nswm --tp 
                     : --nthreadheap --nthreads --trace --trap --nunroll 
                     : --nvarheap --nversion --warn --nwide --nwisk --wo --nzfm 
                     : --xref

 Module "geometry"
  (line-no.)(nest)
          1        !****h* vasputil/geometry
          2        ! NAME
          3        ! geometry
          4        ! COPYRIGHT
          5        !  Copyright (c) 2004, 2005 Janne Blomqvist
          6        
          7        !  This program is free software; you can redistribute it and/or modify
          8        !  it under the terms of the GNU General Public License as published by
          9        !  the Free Software Foundation; either version 2 of the License, or
         10        !  (at your option) any later version.
         11        
         12        !  This program is distributed in the hope that it will be useful,
         13        !  but WITHOUT ANY WARRANTY; without even the implied warranty of
         14        !  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
         15        !  GNU General Public License for more details.
         16        
         17        !  You should have received a copy of the GNU General Public License
         18        !  along with this program; if not, write to the Free Software
         19        !  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
         20        
         21        ! PURPOSE
         22        ! Some geometric shapes and operations.
         23        !****
         24        
         25        module geometry
         26          use conf
         27          use f95_lapack
         28        
         29          implicit none
         30        
         31          !****t* geometry/plane3
         32          ! PURPOSE
         33          ! Plane in a 3d space.
         34          !****
         35          type plane3
         36             real(wp), dimension(3) :: normal
         37             real(wp) :: distOrigo
         38          end type plane3
         39        
         40          !****** geometry/.cross.
         41          ! PURPOSE
         42          ! Cross product operator.
         43          !****
         44          interface operator(.cross.)
         45             module procedure cross
         46          end interface
         47        
         48          !****** geometry/new
         49          ! PURPOSE
         50          ! Generic interface for creating a new plane.
         51          !****
         52          interface new
         53             module procedure new_pn, new_p3
         54          end interface
         55        
         56          contains
         57        
         58            !****f* geometry/new_pn
         59            ! PURPOSE
         60            ! Initialize a plane, using a point on the plane and the normal.
         61            !****
         62            subroutine new_pn(plane, point, normal)
         63              type(plane3), intent(out) :: plane
         64              real(wp), dimension(3), intent(in) :: point, normal
         65              plane%normal = normal
         66              plane%normal = plane%normal/norm(plane%normal)
         67              plane%distOrigo = dot_product(plane%normal, point)
         68            end subroutine new_pn
         69        
         70        
         71            !****f* geometry/new_p3
         72            ! PURPOSE
         73            ! Initialize a plane, using three points which lie in the plane.
         74            !****
         75            subroutine new_p3(plane, point1, point2, point3)
         76              type(plane3), intent(out) :: plane
         77              real(wp), dimension(3), intent(in) :: point1, point2, point3
         78              real(wp), dimension(3) :: v1, v2
         79              v1 = point2 - point1
         80              v2 = point3 - point2
         81              plane%normal = v1 .cross. v2
         82              plane%normal = plane%normal/norm(plane%normal)
         83              plane%distOrigo = dot_product(plane%normal, point2)
         84            end subroutine new_p3
         85        
         86        
         87            !****f* geometry/distanceFrom
         88            ! PURPOSE
         89            ! Distance between a plane and a point.
         90            !****
         91            pure function distanceFrom(plane, point)
         92              type(plane3), intent(in) :: plane
         93              real(wp), dimension(3), intent(in) :: point
         94              real(wp) :: distanceFrom
         95        
         96              distanceFrom = abs(dot_product(plane%normal, point) - plane%distOrigo)
         97            end function distanceFrom
         98        
         99        
        100            !****f* geometry/cross
        101            ! PURPOSE
        102            ! Cross product between two 3d vectors.
        103            !****
        104            pure function cross(a, b)
        105              real(wp), dimension(3), intent(in) :: a,b
        106              real(wp), dimension(3) :: cross
        107        
        108              cross = (/ a(2) * b(3) - a(3) * b(2), &
        109                   a(3) * b(1) - a(1) * b(3), &
        110                   a(1) * b(2) - a(2) * b(1) /)
        111            end function cross
        112        
        113        
        114            !****f* geometry/norm
        115            ! PURPOSE
        116            ! The length of a 3d vector.
        117            !****
        118            pure function norm(a)
        119              real(wp), dimension(3), intent(in) :: a
        120              real(wp) :: norm
        121              norm = sqrt(dot_product(a,a))
        122            end function norm
        123        
        124        
        125            !****f* geometry/pl_intersect
        126            ! PURPOSE
        127            !   Calcultes the point of intersection between a line and a plane
        128            ! NOTES
        129            ! See e.g. http://astronomy.swin.edu.au/~pbourke/geometry/planeline/
        130            !****
        131            subroutine pl_intersect (plane, linep1, linep2, intersect, parallel)
        132              type(plane3), intent(in) :: plane
        133              real(wp), dimension(3), intent(in) :: linep1, linep2
        134              real(wp), optional, intent(out) :: intersect(3)
        135              logical, optional, intent(out) :: parallel
        136              real(wp) :: u, uden, unom
        137              ! If the denominator is 0, the line is parallel to the plane.
        138              uden = dot_product (plane%normal, linep2 - linep1)
        139     1        if (present (parallel)) then
        140     2           if (abs (uden) < epsilon (uden)) then
        141     2              parallel = .true.
        142     2           else
        143     2              parallel = .false.
        144     2           end if
        145     1        end if
        146              unom = dot_product (plane%normal, plane%distOrigo * plane%normal - linep1)
        147              u = unom / uden
        148              ! The point of intersection
        149     1        if (present (intersect)) then
        150     1           intersect = linep1 + u * (linep2 - linep1)
        151     1        end if
        152            end subroutine pl_intersect
        153        
        154        
        155            !****f* geometry/is_lin_dependent
        156            ! PURPOSE
        157            ! Check if a set of vectors are linearly dependent
        158            !****
        159            function is_lin_dependent (a)
        160              real(wp), dimension(:,:), intent(in) :: a
        161              logical :: is_lin_dependent
        162              real(wp) :: s(3), icond, a2(size (a, 1), size (a, 2))
        163        
        164              a2 = a
        165              ! Perform SVD via LAPACK95
        166              call la_gesdd (a2, s)
        167        
        168              ! Condition number of the matrix is the ratio between
        169              ! the largest to the smallest singular value. If this
        170              ! approaches infinity, the matrix is ill-conditioned,
        171              ! i.e. the input vectors were not linearly independent.
        172              ! For numerical reasons calculate the inverse of the
        173              ! condition number.
        174              icond = minval (s) / maxval (s)
        175     1        if (icond < epsilon (icond)) then
        176     1           is_lin_dependent = .true.
        177     1        else
        178     1           is_lin_dependent = .false.
        179     1        end if
        180            end function is_lin_dependent
        181        
        182        end module geometry

 Procedure information
   Lines      : 182
   Statements : 82

 Scoping unit of module : geometry
   Attribute and Cross reference of name
     conf
      |(Class and Type) : module name
      |(Attributes)     : PUBLIC
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 26
     cross
      |(Class and Type) : module function name, REAL(8)
      |(Attributes)     : PUBLIC, PURE
      |(Declaration)    : 45
      |(Definition)     : 
      |(Reference)      : 
     f95_lapack
      |(Class and Type) : module name
      |(Attributes)     : PUBLIC
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 27
     geometry
      |(Class and Type) : module name
      |(Attributes)     : 
      |(Declaration)    : 25
      |(Definition)     : 
      |(Reference)      : 182
     new
      |(Class and Type) : generic name
      |(Attributes)     : PUBLIC
      |(Declaration)    : 52
      |(Definition)     : 
      |(Reference)      : 
     new_p3
      |(Class and Type) : module subroutine name
      |(Attributes)     : PUBLIC
      |(Declaration)    : 53
      |(Definition)     : 
      |(Reference)      : 
     new_pn
      |(Class and Type) : module subroutine name
      |(Attributes)     : PUBLIC
      |(Declaration)    : 53
      |(Definition)     : 
      |(Reference)      : 
     plane3
      |(Class and Type) : type name
      |(Attributes)     : PUBLIC
      |(Declaration)    : 
      |(Definition)     : 35
      |(Reference)      : 
     [OPERATOR(.cross.)]
      |(Class and Type) : user defined operator
      |(Attributes)     : PUBLIC
      |(Declaration)    : 44
      |(Definition)     : 
      |(Reference)      : 
   Derived type construction
     plane3
      |  (Attributes) : 
      |normal
      |  (Type and Attributes) : REAL(8), DIMENSION
      |distOrigo
      |  (Type and Attributes) : REAL(8)

 Scoping unit of module sub-program : new_pn
   Attribute and Cross reference of name
     dot_product
      |(Class and Type) : intrinsic function name, REAL(8)
      |(Attributes)     : PURE
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 67
     new_pn
      |(Class and Type) : module subroutine name
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 62
      |(Reference)      : 68
     norm
      |(Class and Type) : module function name, REAL(8)
      |(Attributes)     : PURE
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 66
     normal
      |(Class and Type) : variable name, REAL(8)
      |(Attributes)     : DIMENSION, INTENT(IN), dummy-argument
      |(Declaration)    : 62  64
      |(Definition)     : 
      |(Reference)      : 65
     plane
      |(Class and Type) : variable name, TYPE(plane3)
      |(Attributes)     : INTENT(OUT), dummy-argument
      |(Declaration)    : 62  63
      |(Definition)     : 65  66  67
      |(Reference)      : 66  66  67
     plane3
      |(Class and Type) : type name
      |(Attributes)     : host-associated
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 63
     point
      |(Class and Type) : variable name, REAL(8)
      |(Attributes)     : DIMENSION, INTENT(IN), dummy-argument
      |(Declaration)    : 62  64
      |(Definition)     : 
      |(Reference)      : 67
     wp
      |(Class and Type) : named constant, INTEGER(4)
      |(Attributes)     : host-associated
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 64

 Scoping unit of module sub-program : new_p3
   Attribute and Cross reference of name
     dot_product
      |(Class and Type) : intrinsic function name, REAL(8)
      |(Attributes)     : PURE
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 83
     new_p3
      |(Class and Type) : module subroutine name
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 75
      |(Reference)      : 84
     norm
      |(Class and Type) : module function name, REAL(8)
      |(Attributes)     : PURE
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 82
     plane
      |(Class and Type) : variable name, TYPE(plane3)
      |(Attributes)     : INTENT(OUT), dummy-argument
      |(Declaration)    : 75  76
      |(Definition)     : 81  82  83
      |(Reference)      : 82  82  83
     plane3
      |(Class and Type) : type name
      |(Attributes)     : host-associated
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 76
     point1
      |(Class and Type) : variable name, REAL(8)
      |(Attributes)     : DIMENSION, INTENT(IN), dummy-argument
      |(Declaration)    : 75  77
      |(Definition)     : 
      |(Reference)      : 79
     point2
      |(Class and Type) : variable name, REAL(8)
      |(Attributes)     : DIMENSION, INTENT(IN), dummy-argument
      |(Declaration)    : 75  77
      |(Definition)     : 
      |(Reference)      : 79  80  83
     point3
      |(Class and Type) : variable name, REAL(8)
      |(Attributes)     : DIMENSION, INTENT(IN), dummy-argument
      |(Declaration)    : 75  77
      |(Definition)     : 
      |(Reference)      : 80
     v1
      |(Class and Type) : variable name, REAL(8)
      |(Attributes)     : DIMENSION
      |(Declaration)    : 78
      |(Definition)     : 79
      |(Reference)      : 81
     v2
      |(Class and Type) : variable name, REAL(8)
      |(Attributes)     : DIMENSION
      |(Declaration)    : 78
      |(Definition)     : 80
      |(Reference)      : 81
     wp
      |(Class and Type) : named constant, INTEGER(4)
      |(Attributes)     : host-associated
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 77  78
     [OPERATOR(.cross.)]
      |(Class and Type) : user defined operator
      |(Attributes)     : host-associated, PURE
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 81

 Scoping unit of module sub-program : distanceFrom
   Attribute and Cross reference of name
     abs
      |(Class and Type) : intrinsic function name, REAL(8)
      |(Attributes)     : PURE, ELEMENTAL
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 96
     distanceFrom
      |(Class and Type) : variable name, REAL(8)
      |(Attributes)     : result-value
      |(Declaration)    : 94
      |(Definition)     : 96
      |(Reference)      : 
     distanceFrom
      |(Class and Type) : module function name, REAL(8)
      |(Attributes)     : PURE
      |(Declaration)    : 
      |(Definition)     : 91
      |(Reference)      : 97
     dot_product
      |(Class and Type) : intrinsic function name, REAL(8)
      |(Attributes)     : PURE
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 96
     plane
      |(Class and Type) : variable name, TYPE(plane3)
      |(Attributes)     : INTENT(IN), dummy-argument
      |(Declaration)    : 91  92
      |(Definition)     : 
      |(Reference)      : 96  96
     plane3
      |(Class and Type) : type name
      |(Attributes)     : host-associated
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 92
     point
      |(Class and Type) : variable name, REAL(8)
      |(Attributes)     : DIMENSION, INTENT(IN), dummy-argument
      |(Declaration)    : 91  93
      |(Definition)     : 
      |(Reference)      : 96
     wp
      |(Class and Type) : named constant, INTEGER(4)
      |(Attributes)     : host-associated
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 93  94

 Scoping unit of module sub-program : cross
   Attribute and Cross reference of name
     a
      |(Class and Type) : variable name, REAL(8)
      |(Attributes)     : DIMENSION, INTENT(IN), dummy-argument
      |(Declaration)    : 104  105
      |(Definition)     : 
      |(Reference)      : 108  108  108  108  108  108
     b
      |(Class and Type) : variable name, REAL(8)
      |(Attributes)     : DIMENSION, INTENT(IN), dummy-argument
      |(Declaration)    : 104  105
      |(Definition)     : 
      |(Reference)      : 108  108  108  108  108  108
     cross
      |(Class and Type) : variable name, REAL(8)
      |(Attributes)     : DIMENSION, result-value
      |(Declaration)    : 106
      |(Definition)     : 108
      |(Reference)      : 
     cross
      |(Class and Type) : module function name, REAL(8)
      |(Attributes)     : PURE
      |(Declaration)    : 
      |(Definition)     : 104
      |(Reference)      : 111
     wp
      |(Class and Type) : named constant, INTEGER(4)
      |(Attributes)     : host-associated
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 105  106

 Scoping unit of module sub-program : norm
   Attribute and Cross reference of name
     a
      |(Class and Type) : variable name, REAL(8)
      |(Attributes)     : DIMENSION, INTENT(IN), dummy-argument
      |(Declaration)    : 118  119
      |(Definition)     : 
      |(Reference)      : 121  121
     dot_product
      |(Class and Type) : intrinsic function name, REAL(8)
      |(Attributes)     : PURE
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 121
     norm
      |(Class and Type) : variable name, REAL(8)
      |(Attributes)     : result-value
      |(Declaration)    : 120
      |(Definition)     : 121
      |(Reference)      : 
     norm
      |(Class and Type) : module function name, REAL(8)
      |(Attributes)     : PURE
      |(Declaration)    : 
      |(Definition)     : 118
      |(Reference)      : 122
     sqrt
      |(Class and Type) : intrinsic function name, REAL(8)
      |(Attributes)     : PURE, ELEMENTAL
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 121
     wp
      |(Class and Type) : named constant, INTEGER(4)
      |(Attributes)     : host-associated
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 119  120

 Scoping unit of module sub-program : pl_intersect
   Attribute and Cross reference of name
     abs
      |(Class and Type) : intrinsic function name, REAL(8)
      |(Attributes)     : PURE, ELEMENTAL
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 140
     dot_product
      |(Class and Type) : intrinsic function name, REAL(8)
      |(Attributes)     : PURE
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 138  146
     epsilon
      |(Class and Type) : intrinsic function name, REAL(8)
      |(Attributes)     : PURE
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 140
     intersect
      |(Class and Type) : variable name, REAL(8)
      |(Attributes)     : DIMENSION, INTENT(OUT), OPTIONAL, dummy-argument
      |(Declaration)    : 131  134
      |(Definition)     : 150
      |(Reference)      : 149
     linep1
      |(Class and Type) : variable name, REAL(8)
      |(Attributes)     : DIMENSION, INTENT(IN), dummy-argument
      |(Declaration)    : 131  133
      |(Definition)     : 
      |(Reference)      : 138  146  150  150
     linep2
      |(Class and Type) : variable name, REAL(8)
      |(Attributes)     : DIMENSION, INTENT(IN), dummy-argument
      |(Declaration)    : 131  133
      |(Definition)     : 
      |(Reference)      : 138  150
     parallel
      |(Class and Type) : variable name, LOGICAL(4)
      |(Attributes)     : INTENT(OUT), OPTIONAL, dummy-argument
      |(Declaration)    : 131  135
      |(Definition)     : 141  143
      |(Reference)      : 139
     pl_intersect
      |(Class and Type) : module subroutine name
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 131
      |(Reference)      : 152
     plane
      |(Class and Type) : variable name, TYPE(plane3)
      |(Attributes)     : INTENT(IN), dummy-argument
      |(Declaration)    : 131  132
      |(Definition)     : 
      |(Reference)      : 138  146  146  146
     plane3
      |(Class and Type) : type name
      |(Attributes)     : host-associated
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 132
     present
      |(Class and Type) : intrinsic function name, LOGICAL(4)
      |(Attributes)     : PURE
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 139  149
     u
      |(Class and Type) : variable name, REAL(8)
      |(Attributes)     : 
      |(Declaration)    : 136
      |(Definition)     : 147
      |(Reference)      : 150
     uden
      |(Class and Type) : variable name, REAL(8)
      |(Attributes)     : 
      |(Declaration)    : 136
      |(Definition)     : 138
      |(Reference)      : 140  140  147
     unom
      |(Class and Type) : variable name, REAL(8)
      |(Attributes)     : 
      |(Declaration)    : 136
      |(Definition)     : 146
      |(Reference)      : 147
     wp
      |(Class and Type) : named constant, INTEGER(4)
      |(Attributes)     : host-associated
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 133  134  136

 Scoping unit of module sub-program : is_lin_dependent
   Attribute and Cross reference of name
     a
      |(Class and Type) : variable name, REAL(8)
      |(Attributes)     : DIMENSION, INTENT(IN), dummy-argument
      |(Declaration)    : 159  160
      |(Definition)     : 
      |(Reference)      : 162  162  164
     a2
      |(Class and Type) : variable name, REAL(8)
      |(Attributes)     : DIMENSION
      |(Declaration)    : 162
      |(Definition)     : 164  166
      |(Reference)      : 
     epsilon
      |(Class and Type) : intrinsic function name, REAL(8)
      |(Attributes)     : PURE
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 175
     icond
      |(Class and Type) : variable name, REAL(8)
      |(Attributes)     : 
      |(Declaration)    : 162
      |(Definition)     : 174
      |(Reference)      : 175  175
     is_lin_dependent
      |(Class and Type) : variable name, LOGICAL(4)
      |(Attributes)     : result-value
      |(Declaration)    : 161
      |(Definition)     : 176  178
      |(Reference)      : 
     is_lin_dependent
      |(Class and Type) : module function name, LOGICAL(4)
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 159
      |(Reference)      : 180
     LA_GESDD
      |(Class and Type) : generic name
      |(Attributes)     : host-associated
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 166
     maxval
      |(Class and Type) : intrinsic function name, REAL(8)
      |(Attributes)     : PURE
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 174
     minval
      |(Class and Type) : intrinsic function name, REAL(8)
      |(Attributes)     : PURE
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 174
     s
      |(Class and Type) : variable name, REAL(8)
      |(Attributes)     : DIMENSION
      |(Declaration)    : 162
      |(Definition)     : 166
      |(Reference)      : 174  174
     size
      |(Class and Type) : intrinsic function name, INTEGER(4)
      |(Attributes)     : PURE
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 162  162
     wp
      |(Class and Type) : named constant, INTEGER(4)
      |(Attributes)     : host-associated
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 160  162

 Total information
   Procedures       : 1
   Total lines      : 182
   Total statements : 82

