
 Lahey/Fujitsu Fortran 95 Compiler Release L6.20b  Mon Sep 19 12:45:00 2005
 Copyright (C) 1994-2003 Lahey Computer Systems.  All rights reserved.
 Copyright (C) 1998-2003 FUJITSU LIMITED. All rights reserved.

 Compilation information
   Current directory : /home/job/src/vasputil_f90
   Source file       : src/la_dgesdd.f90
   Compiler options  : --ap -c --chk aesux --chkglobal --nco --dal --ndbl --f95 
                     : -g --nin --info --li --lst --nlong --maxfatals 50 --nml 
                     : --nmldefault --o0 --no --nocl --nopenmp --nparallel 
                     : --nprefetch --pca --nprivate --nquad --quiet --nsav 
                     : --nshared --nsse2 --nstaticlink --nswm --tp 
                     : --nthreadheap --nthreads --trace --trap --nunroll 
                     : --nvarheap --nversion --warn --nwide --nwisk --wo --nzfm 
                     : --xref

 External subroutine subprogram "DGESDD_F95"
  (line-no.)(nest)
          1        SUBROUTINE DGESDD_F95( A, S, U, VT, WW, JOB, INFO )
          2        !
          3        !  -- LAPACK95 interface driver routine (version 3.0) --
          4        !     UNI-C, Denmark; Univ. of Tennessee, USA; NAG Ltd., UK
          5        !     September, 2000
          6        !
          7        !  .. USE STATEMENTS ..
          8           USE LA_PRECISION, ONLY: WP => DP
          9           USE LA_AUXMOD, ONLY: ERINFO, LSAME
         10           USE F77_LAPACK, ONLY: GESDD_F77 => LA_GESDD
         11        !  .. IMPLICIT STATEMENT ..
         12           IMPLICIT NONE
         13        !  .. SCALAR ARGUMENTS ..
         14           CHARACTER(LEN=1), OPTIONAL, INTENT(IN) :: JOB
         15           INTEGER, INTENT(OUT), OPTIONAL :: INFO
         16        !  .. ARRAY ARGUMENTS ..
         17           REAL(WP), INTENT(INOUT) :: A(:,:)
         18           REAL(WP), INTENT(OUT) :: S(:)
         19           REAL(WP), INTENT(OUT), OPTIONAL :: WW(:)
         20           REAL(WP), INTENT(OUT), OPTIONAL, TARGET :: U(:,:), VT(:,:)
         21        !----------------------------------------------------------------------
         22        !
         23        !  Purpose
         24        !  =======
         25        !
         26        !       LA_GESVD and LA_GESDD compute the singular values and,
         27        ! optionally, the left and/or right singular vectors from the singular
         28        ! value decomposition  (SVD) of a real or complex m by n matrix A. The
         29        ! SVD of A is written
         30        !                    A = U * SIGMA * V^H
         31        ! where SIGMA is an  m by n matrix which is zero except for its
         32        ! min(m, n) diagonal elements, U is an m by m orthogonal (unitary)
         33        ! matrix, and V is an n by n orthogonal (unitary) matrix. The diagonal
         34        ! elements of SIGMA , i.e., the values
         35        !
         36        !      sigma(i)= SIGMA(i,i), i = 1, 2,..., min(m, n)
         37        ! are the singular values of A; they are real and non-negative, and are
         38        ! returned in descending order. The first min(m, n) columns of U and V
         39        ! are the left and right singular vectors of A, respectively.
         40        ! LA_GESDD solves the same problem as LA_GESVD but uses a divide and
         41        ! conquer method if singular vectors are desired. For large matrices it
         42        ! is usually much faster than LA_GESVD when singular vectors are
         43        ! desired, but uses more workspace.
         44        !
         45        ! Note: The routine returns V^H , not V .
         46        !
         47        ! ========
         48        !
         49        !    SUBROUTINE LA_GESVD / LA_GESDD( A, S, U=u, VT=vt, &
         50        !              WW=ww, JOB=job, INFO=info )
         51        !      <type>(<wp>), INTENT(INOUT) :: A(:,:)
         52        !      REAL(<wp>), INTENT(OUT) :: S(:)
         53        !      <type>(<wp>), INTENT(OUT), OPTIONAL :: U(:,:), VT(:,:)
         54        !      REAL(<wp>), INTENT(OUT), OPTIONAL :: WW(:)
         55        !      CHARACTER(LEN=1), INTENT(IN), OPTIONAL :: JOB
         56        !      INTEGER, INTENT(OUT), OPTIONAL :: INFO
         57        !      where
         58        !      <type> ::= REAL | COMPLEX
         59        !      <wp>   ::= KIND(1.0) | KIND(1.0D0)
         60        !
         61        ! Arguments
         62        ! =========
         63        !
         64        ! A      (input/output) REAL or COMPLEX array, shape (:, :) with
         65        !        size(A, 1) = m and size(A, 2) = n.
         66        !        On entry, the matrix A.
         67        !        On exit, if JOB = 'U' and U is not present, then A is
         68        !        overwritten with the first min(m, n) columns of U (the left
         69        !        singular vectors, stored columnwise).
         70        !        If JOB = 'V' and VT is not present, then A is overwritten with
         71        !        the first min(m, n) rows of V^H (the right singular vectors,
         72        !        stored rowwise).
         73        !        In all cases the original contents of A are destroyed.
         74        ! S      (output) REAL array, shape (:) with size(S) = min(m, n).
         75        !        The singular values of A, sorted so that S(i) >= S(i+1).
         76        ! U      Optional (output) REAL or COMPLEX array, shape (:, :) with
         77        !        size(U, 1) = m  and size(U, 2) = m or min(m, n).
         78        !        If size(U, 2) = m, U contains the m by m matrix U .
         79        !        If size(U; 2) = min(m, n), U contains the first min(m, n)
         80        !        columns of U (the left singular vectors, stored columnwise).
         81        ! VT     Optional (output) REAL or COMPLEX array, shape (:, :) with
         82        !        size(VT, 1) = n or min(m, n) and size(VT, 2) = n.
         83        !        If size(VT, 1) = n , VT contains the n by n matrix V^H .
         84        !        If size(VT, 1) = min(m, n), VT contains the first min(m, n)
         85        !        rows of V^H (the right singular vectors, stored rowwise).
         86        ! WW     Optional (output) REAL array, shape (:) with size(WW) =
         87        !        min(m, n) - 1
         88        !        If INFO > 0, WW contains the unconverged superdiagonal elements
         89        !        of an upper bidiagonal matrix B whose diagonal is in SIGMA (not
         90        !        necessarily sorted). B has the same singular values as A.
         91        !        Note: WW is a dummy argument for LA_GESDD.
         92        ! JOB    Optional (input) CHARACTER(LEN=1).
         93        !        = 'N': neither columns of U nor rows of V^H are returned in
         94        !          array A.
         95        !        = 'U': if U is not present, the first min(m, n) columns of U
         96        !          (the left singular vectors) are returned in array A;
         97        !        = 'V': if VT is not present, the first min(m, n) rows of V^H
         98        !          (the right singular vectors) are returned in array A;
         99        !        Default value: 'N'.
        100        ! INFO   Optional (output) INTEGER.
        101        !        = 0: successful exit.
        102        !        < 0: if INFO = -i, the i-th argument had an illegal value.
        103        !        > 0: The algorithm did not converge.
        104        !        If INFO is not present and an error occurs, then the program is
        105        !        terminated with an error message.
        106        !----------------------------------------------------------------------
        107        !  .. LOCAL PARAMETERS ..
        108           CHARACTER(LEN=8), PARAMETER :: SRNAME = 'LA_GESDD'
        109        !  .. LOCAL SCALARS ..
        110           CHARACTER(LEN=1) :: LJOBZ, JOBZ
        111           INTEGER, SAVE :: LWORK = 0
        112           INTEGER :: N, M, LINFO, LD, ISTAT, S1U, S2U, S1VT, S2VT, &
        113        &             MN, SMLSIZ
        114        !  .. LOCAL ARRAYS ..
        115           REAL(WP), TARGET :: LLU(1,1), LLVT(1,1)
        116           REAL(WP), POINTER :: WORK(:), W1(:,:), W2(:,:)
        117           INTEGER, POINTER :: IWORK(:)
        118        !  .. EXTERNAL ..
        119           INTEGER ILAENV
        120        !  .. INTRINSIC FUNCTIONS ..
        121           INTRINSIC MIN, MAX, PRESENT, SIZE
        122        !  .. EXECUTABLE STATEMENTS ..
        123           LINFO = 0; ISTAT = 0; M = SIZE(A,1); N = SIZE(A,2)
        124           LD = MAX(1,M); MN = MIN(M,N)
        125        
        126     1     IF( PRESENT(JOB) )THEN; LJOBZ = JOB; ELSE; LJOBZ = 'N'; ENDIF
        127     1     IF( PRESENT(U) )THEN; S1U = SIZE(U,1); S2U = SIZE(U,2)
        128     1     ELSE; S1U = 1; S2U = 1; END IF
        129     1     IF( PRESENT(VT) )THEN; S1VT = SIZE(VT,1); S2VT = SIZE(VT,2)
        130     1     ELSE; S1VT = 1; S2VT = 1; END IF
        131        !  .. TEST THE ARGUMENTS
        132     1     IF( M < 0 .OR. N < 0 )THEN; LINFO = -1
        133     1     ELSE IF( SIZE( S ) /= MN )THEN; LINFO = -2
        134     1     ELSE IF( PRESENT(U) .AND. ( S1U /= M .OR. &
        135     1              ( S2U /= M .AND. S2U /= MN ) ) )THEN; LINFO = -3
        136     1     ELSE IF( PRESENT(VT) .AND. ( ( S1VT /= N .AND. S1VT /= MN ) &
        137     1              .OR. S2VT /= N ) )THEN; LINFO = -4
        138     1     ELSE IF(.NOT. (LSAME(LJOBZ, 'N') .OR. LSAME(LJOBZ,'U') .OR. LSAME(LJOBZ, 'V'))) THEN ; LINFO = -6
        139     1     ELSE
        140     1  
        141     1          SMLSIZ = ILAENV( 9, 'DGESDD', ' ', 0, 0, 0, 0 )
        142     1          LWORK = MAX(MAX(14*MIN(M,N)+4, 10*MIN(M,N)+2+SMLSIZ*(SMLSIZ+8)) + MAX(M,N), &
        143     1  &         5*MIN(M,N)*MIN(M,N) + MAX(M,N) + 9*MIN(M,N))
        144     1  
        145     1          ALLOCATE(WORK(LWORK), STAT=ISTAT)
        146     2          IF( ISTAT == 0 ) THEN
        147     2            ALLOCATE(IWORK(8*MIN(M,N)), STAT=ISTAT)
        148     3            IF( ISTAT == 0 ) THEN
        149     4              IF (.NOT.PRESENT(U) .AND. .NOT. PRESENT(VT)) THEN
        150     4                ALLOCATE(W1(M,M), W2(N,N), STAT=ISTAT)
        151     5                IF (ISTAT == 0) THEN
        152     6                  IF (.NOT. LSAME(LJOBZ, 'N')) THEN
        153     6                    JOBZ = 'S'
        154     6                  ELSE
        155     6                    JOBZ = 'N'
        156     6                  ENDIF
        157     5                  CALL GESDD_F77(JOBZ, M, N, A, LD, S, W1, MAX(1,M), &
        158     5  &                 W2, MAX(1,N), WORK, LWORK, IWORK, LINFO )
        159     6                  SELECT CASE(LJOBZ)
        160     6                    CASE ('U')
        161     6                      A(1:MN, 1:MN) = W1(1:MN, 1:MN)
        162     6                    CASE ('V')
        163     6                      A(1:MN, 1:MN) = W2(1:MN, 1:MN)
        164     6                  END SELECT
        165     5                  DEALLOCATE(W1, W2)
        166     5                ELSE
        167     5                  LINFO = -100
        168     5                END IF
        169     4              ELSE IF (.NOT. PRESENT(U) .AND. PRESENT(VT)) THEN
        170     4                JOBZ = 'A'
        171     4                ALLOCATE(W1(M,M), STAT=ISTAT)
        172     5                IF (ISTAT == 0) THEN
        173     6  	       IF (PRESENT (VT)) THEN
        174     6                  CALL GESDD_F77(JOBZ, M, N, A, LD, S, W1, MAX(1,M), &
        175     6  &                 VT, MAX(1, S1VT), WORK, LWORK, IWORK, LINFO )
        176     6                 ELSE
        177     6  	        CALL GESDD_F77(JOBZ, M, N, A, LD, S, W1, MAX(1,M), &
        178     6  &                 LLVT, MAX(1, S1VT), WORK, LWORK, IWORK, LINFO )
        179     6                 ENDIF
        180     5                  IF (LSAME(LJOBZ, 'U')) A(1:M, 1:MN) = W1(1:M, 1:MN)
        181     5                  DEALLOCATE(W1)
        182     5                ELSE
        183     5                  LINFO = -100
        184     5                END IF
        185     4              ELSE IF (PRESENT(U) .AND. .NOT. PRESENT(VT)) THEN
        186     4                JOBZ = 'A'
        187     4                ALLOCATE(W2(N,N), STAT=ISTAT)
        188     5                IF (ISTAT == 0) THEN
        189     6  	       IF (PRESENT (U)) THEN
        190     6                  CALL GESDD_F77(JOBZ, M, N, A, LD, S, U, MAX(1,S1U), &
        191     6  &                 W2, MAX(1,N), WORK, LWORK, IWORK, LINFO )
        192     6                 ELSE
        193     6  	        CALL GESDD_F77(JOBZ, M, N, A, LD, S, LLU, MAX(1,S1U), &
        194     6  &                 W2, MAX(1,N), WORK, LWORK, IWORK, LINFO )
        195     6                 ENDIF
        196     5                  IF (LSAME(LJOBZ, 'V')) A(1:MN, 1:N) = W2(1:MN, 1:N)
        197     5                  DEALLOCATE(W2)
        198     5                ELSE
        199     5                  LINFO = -100
        200     5                END IF
        201     4              ELSE
        202     4                JOBZ = 'A'
        203     5  	      IF (PRESENT (VT)) THEN
        204     6  	        IF (PRESENT (U)) THEN
        205     6                    CALL GESDD_F77(JOBZ, M, N, A, LD, S, U, MAX(1,S1U), &
        206     6  &                   VT, MAX(1,S1VT), WORK, LWORK, IWORK, LINFO )
        207     6                  ELSE
        208     6  	          CALL GESDD_F77(JOBZ, M, N, A, LD, S, LLU, MAX(1,S1U), &
        209     6  &                   VT, MAX(1,S1VT), WORK, LWORK, IWORK, LINFO )
        210     6                  ENDIF
        211     5  	      ELSE
        212     6  	        IF (PRESENT (U)) THEN
        213     6                    CALL GESDD_F77(JOBZ, M, N, A, LD, S, U, MAX(1,S1U), &
        214     6  &                   LLVT, MAX(1,S1VT), WORK, LWORK, IWORK, LINFO )
        215     6                  ELSE
        216     6  	          CALL GESDD_F77(JOBZ, M, N, A, LD, S, LLU, MAX(1,S1U), &
        217     6  &                   LLVT, MAX(1,S1VT), WORK, LWORK, IWORK, LINFO )
        218     6                  ENDIF
        219     5  	      ENDIF
        220     4                IF (PRESENT(WW)) WW = WORK(1)
        221     4              ENDIF
        222     3            ELSE
        223     3              LINFO = -100
        224     3            END IF
        225     2            DEALLOCATE(WORK)
        226     2          ELSE
        227     2            LINFO = -100
        228     2          END IF
        229     1        ENDIF
        230              CALL ERINFO(LINFO,SRNAME,INFO,ISTAT)
        231            END SUBROUTINE DGESDD_F95

 Procedure information
   Lines      : 231
   Statements : 136

 Scoping unit of external sub-program : DGESDD_F95
   Attribute and Cross reference of name
     A
      |(Class and Type) : variable name, REAL(8)
      |(Attributes)     : DIMENSION, INTENT(INOUT), dummy-argument
      |(Declaration)    : 1  17
      |(Definition)     : 157  161  163  174  177  180  190  193  196  205  208  213  216
      |(Reference)      : 123  123
     DGESDD_F95
      |(Class and Type) : external subroutine name
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 1
      |(Reference)      : 231
     DP
      |(Class and Type) : use name
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 8
     ERINFO
      |(Class and Type) : external subroutine name
      |(Attributes)     : use-associated
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 9  230
     F77_LAPACK
      |(Class and Type) : module name
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 10
     GESDD_F77
      |(Class and Type) : generic name
      |(Attributes)     : use-associated
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 10  157  174  177  190  193  205  208  213  216
     ILAENV
      |(Class and Type) : external function name, INTEGER(4)
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 141
     ILAENV
      |(Class and Type) : variable name, INTEGER(4)
      |(Attributes)     : 
      |(Declaration)    : 119
      |(Definition)     : 
      |(Reference)      : 
     INFO
      |(Class and Type) : variable name, INTEGER(4)
      |(Attributes)     : INTENT(OUT), OPTIONAL, dummy-argument
      |(Declaration)    : 1  15
      |(Definition)     : 230
      |(Reference)      : 
     ISTAT
      |(Class and Type) : variable name, INTEGER(4)
      |(Attributes)     : 
      |(Declaration)    : 112
      |(Definition)     : 123  145  147  150  171  187
      |(Reference)      : 146  148  151  172  188  230
     IWORK
      |(Class and Type) : variable name, INTEGER(4)
      |(Attributes)     : DIMENSION, POINTER
      |(Declaration)    : 117
      |(Definition)     : 147  157  174  177  190  193  205  208  213  216
      |(Reference)      : 
     JOB
      |(Class and Type) : variable name, CHARACTER(1,1)
      |(Attributes)     : INTENT(IN), OPTIONAL, dummy-argument
      |(Declaration)    : 1  14
      |(Definition)     : 
      |(Reference)      : 126  126
     JOBZ
      |(Class and Type) : variable name, CHARACTER(1,1)
      |(Attributes)     : 
      |(Declaration)    : 110
      |(Definition)     : 153  155  170  186  202
      |(Reference)      : 157  174  177  190  193  205  208  213  216
     LA_AUXMOD
      |(Class and Type) : module name
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 9
     LA_GESDD
      |(Class and Type) : use name
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 10
     LA_PRECISION
      |(Class and Type) : module name
      |(Attributes)     : 
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 8
     LD
      |(Class and Type) : variable name, INTEGER(4)
      |(Attributes)     : 
      |(Declaration)    : 112
      |(Definition)     : 124
      |(Reference)      : 157  174  177  190  193  205  208  213  216
     LINFO
      |(Class and Type) : variable name, INTEGER(4)
      |(Attributes)     : 
      |(Declaration)    : 112
      |(Definition)     : 123  132  133  135  137  138  157  167  174  177  183  190  193  199  205  208  213  216  223  227
      |(Reference)      : 230
     LJOBZ
      |(Class and Type) : variable name, CHARACTER(1,1)
      |(Attributes)     : 
      |(Declaration)    : 110
      |(Definition)     : 126  126
      |(Reference)      : 138  138  138  152  159  180  196
     LLU
      |(Class and Type) : variable name, REAL(8)
      |(Attributes)     : DIMENSION, TARGET
      |(Declaration)    : 115
      |(Definition)     : 193  208  216
      |(Reference)      : 
     LLVT
      |(Class and Type) : variable name, REAL(8)
      |(Attributes)     : DIMENSION, TARGET
      |(Declaration)    : 115
      |(Definition)     : 177  213  216
      |(Reference)      : 
     LSAME
      |(Class and Type) : module function name, LOGICAL(4)
      |(Attributes)     : use-associated
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 9  138  138  138  152  180  196
     LWORK
      |(Class and Type) : variable name, INTEGER(4)
      |(Attributes)     : SAVE, initialized
      |(Declaration)    : 111
      |(Definition)     : 142
      |(Reference)      : 145  157  174  177  190  193  205  208  213  216
     M
      |(Class and Type) : variable name, INTEGER(4)
      |(Attributes)     : 
      |(Declaration)    : 112
      |(Definition)     : 123
      |(Reference)      : 124  124  132  134  134  142  142  142  142  142  142  142  147  150  150  157  157  171  171  174  174  177  177  180  180  190  193  205  208  213  216
     MAX
      |(Class and Type) : intrinsic function name, INTEGER(4)
      |(Attributes)     : INTRINSIC, PURE, ELEMENTAL
      |(Declaration)    : 121
      |(Definition)     : 
      |(Reference)      : 124  142  142  142  142  157  157  174  174  177  177  190  190  193  193  205  205  208  208  213  213  216  216
     MIN
      |(Class and Type) : intrinsic function name, INTEGER(4)
      |(Attributes)     : INTRINSIC, PURE, ELEMENTAL
      |(Declaration)    : 121
      |(Definition)     : 
      |(Reference)      : 124  142  142  142  142  142  147
     MN
      |(Class and Type) : variable name, INTEGER(4)
      |(Attributes)     : 
      |(Declaration)    : 112
      |(Definition)     : 124
      |(Reference)      : 133  134  136  161  161  161  161  163  163  163  163  180  180  196  196
     N
      |(Class and Type) : variable name, INTEGER(4)
      |(Attributes)     : 
      |(Declaration)    : 112
      |(Definition)     : 123
      |(Reference)      : 124  132  136  136  142  142  142  142  142  142  142  147  150  150  157  157  174  177  187  187  190  190  193  193  196  196  205  208  213  216
     PRESENT
      |(Class and Type) : intrinsic function name, LOGICAL(4)
      |(Attributes)     : INTRINSIC, PURE
      |(Declaration)    : 121
      |(Definition)     : 
      |(Reference)      : 126  127  129  134  136  149  149  169  169  173  185  185  189  203  204  212  220
     S
      |(Class and Type) : variable name, REAL(8)
      |(Attributes)     : DIMENSION, INTENT(OUT), dummy-argument
      |(Declaration)    : 1  18
      |(Definition)     : 157  174  177  190  193  205  208  213  216
      |(Reference)      : 133
     S1U
      |(Class and Type) : variable name, INTEGER(4)
      |(Attributes)     : 
      |(Declaration)    : 112
      |(Definition)     : 127  128
      |(Reference)      : 134  190  193  205  208  213  216
     S1VT
      |(Class and Type) : variable name, INTEGER(4)
      |(Attributes)     : 
      |(Declaration)    : 112
      |(Definition)     : 129  130
      |(Reference)      : 136  136  174  177  205  208  213  216
     S2U
      |(Class and Type) : variable name, INTEGER(4)
      |(Attributes)     : 
      |(Declaration)    : 112
      |(Definition)     : 127  128
      |(Reference)      : 134  134
     S2VT
      |(Class and Type) : variable name, INTEGER(4)
      |(Attributes)     : 
      |(Declaration)    : 112
      |(Definition)     : 129  130
      |(Reference)      : 136
     SIZE
      |(Class and Type) : intrinsic function name, INTEGER(4)
      |(Attributes)     : INTRINSIC, PURE
      |(Declaration)    : 121
      |(Definition)     : 
      |(Reference)      : 123  123  127  127  129  129  133
     SMLSIZ
      |(Class and Type) : variable name, INTEGER(4)
      |(Attributes)     : 
      |(Declaration)    : 112
      |(Definition)     : 141
      |(Reference)      : 142  142
     SRNAME
      |(Class and Type) : named constant, CHARACTER(8,1)
      |(Attributes)     : 
      |(Declaration)    : 108
      |(Definition)     : 
      |(Reference)      : 230
     U
      |(Class and Type) : variable name, REAL(8)
      |(Attributes)     : DIMENSION, INTENT(OUT), OPTIONAL, TARGET, dummy-argument
      |(Declaration)    : 1  20
      |(Definition)     : 190  205  213
      |(Reference)      : 127  127  127  134  149  169  185  189  204  212
     VT
      |(Class and Type) : variable name, REAL(8)
      |(Attributes)     : DIMENSION, INTENT(OUT), OPTIONAL, TARGET, dummy-argument
      |(Declaration)    : 1  20
      |(Definition)     : 174  205  208
      |(Reference)      : 129  129  129  136  149  169  173  185  203
     W1
      |(Class and Type) : variable name, REAL(8)
      |(Attributes)     : DIMENSION, POINTER
      |(Declaration)    : 116
      |(Definition)     : 150  157  165  171  174  177  181
      |(Reference)      : 161  180
     W2
      |(Class and Type) : variable name, REAL(8)
      |(Attributes)     : DIMENSION, POINTER
      |(Declaration)    : 116
      |(Definition)     : 150  157  165  187  190  193  197
      |(Reference)      : 163  196
     WORK
      |(Class and Type) : variable name, REAL(8)
      |(Attributes)     : DIMENSION, POINTER
      |(Declaration)    : 116
      |(Definition)     : 145  157  174  177  190  193  205  208  213  216  225
      |(Reference)      : 220
     WP
      |(Class and Type) : named constant, INTEGER(4)
      |(Attributes)     : use-associated
      |(Declaration)    : 
      |(Definition)     : 
      |(Reference)      : 8  17  18  19  20  115  116
     WW
      |(Class and Type) : variable name, REAL(8)
      |(Attributes)     : DIMENSION, INTENT(OUT), OPTIONAL, dummy-argument
      |(Declaration)    : 1  19
      |(Definition)     : 220
      |(Reference)      : 220

 Total information
   Procedures       : 1
   Total lines      : 231
   Total statements : 136

